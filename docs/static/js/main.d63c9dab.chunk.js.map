{"version":3,"sources":["components/ClientsList.js","components/ModalItem.js","components/PrepareModal.js","components/TrainersForm.js","components/ConfigPage.js","images/foto.jpg","components/Cards.js","components/ResultView.js","components/ValorationList.js","components/Valoration.js","components/ResultPage.js","App.js","index.js"],"names":["ClientsList","props","Row","Col","client","name","impReputation","ModalItem","clients","map","index","ListGroup","Item","Modal","animation","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","variant","Footer","Button","onClick","onHide","PrepareModal","useState","modalShow","setModalShow","className","show","TrainersForm","setShow","optionPlaces","number","handleInputs","env","value","currentTarget","isNaN","handleForm","trainer","Form","inline","Label","htmlFor","Control","placeholder","defaultValue","onChange","reputation","Alert","as","custom","places","ConfigPage","handleShownTrainers","trainersList","shownTrainers","to","Cards","asigClients","listClients","clientstrainer","trainerName","clientName","Card","OverlayTrigger","placement","overlay","Tooltip","xs","md","Image","src","image","width","height","roundedCircle","Text","ResultView","JSON","parse","stringify","trainers","finalTrainers","sort","a","b","i","length","satisfaction","push","selected","globalValoration","handleValoration","finalArr","trainersfiltered","CardColumns","ValorationList","data","toFixed","Valoration","valorations","listFinalTrainers","valoration","Container","ProgressBar","now","ResultPage","numValoration","sufPlaces","arr","dataClients","setGlovalValoration","setListFinalTrainers","restPlaces","splice","handlePlaces","forEach","finalValTrainers","Tabs","defaultActiveKey","onSelect","Tab","eventKey","title","App","arrShownTrainers","dataTrainers","setShownTrainers","fluid","exact","path","parseFloat","parseInt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d63c9dab.chunk.js","sourcesContent":["import { React } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\nfunction ClientsList(props) {\n  return (\n    <>\n      <Row>\n        <Col>Nombre cliente: {props.client.name}</Col>\n        <Col>Importancia reputaci√≥n: {props.client.impReputation}</Col>\n      </Row>\n    </>\n  );\n}\n\nexport default ClientsList;\n","import { React } from \"react\";\nimport { Modal, Button, ListGroup } from \"react-bootstrap\";\nimport ClientsList from \"./ClientsList\";\n\nfunction ModalItem(props) {\n  const clients = props.clients.map((client, index) => {\n    return (\n      <ListGroup.Item key={index}>\n        <ClientsList client={client} />\n      </ListGroup.Item>\n    );\n  });\n  return (\n    <Modal\n      {...props}\n      animation={false}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Tabla de clientes\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <ListGroup variant=\"flush\">{clients}</ListGroup>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Salir</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default ModalItem;\n","import { React, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport ModalItem from \"./ModalItem\";\n\nfunction PrepareModal(props) {\n  const [modalShow, setModalShow] = useState(false);\n  return (\n    <>\n      <Button\n        variant=\"outline-primary\"\n        size=\"sm\"\n        className=\"float-right button\"\n        onClick={() => setModalShow(true)}\n      >\n        Ver tabla de clientes\n      </Button>\n      <ModalItem\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n        clients={props.clients}\n      />\n    </>\n  );\n}\n\nexport default PrepareModal;\n","import React, { useState } from \"react\";\nimport { Form, Alert } from \"react-bootstrap\";\n\nfunction TrainersForm(props) {\n  const [show, setShow] = useState(false);\n\n  // No deja podner m√°s del n√∫mero de clientes en el input del formulario \"N√∫mero m√°ximo de clientes\"\n  const optionPlaces = props.clients.map((client, number) => {\n    return <option key={number}>{number + 1}</option>;\n  });\n\n  // Formulario con cada uno de los entrenadores. Se comprueba si los valores son correctos.\n  const handleInputs = (env) => {\n    let value = env.currentTarget.value;\n    let index = props.index;\n    let id = env.currentTarget.id;\n\n    if (id === \"reputation\") {\n      if (!value || isNaN(value) || value > 5 || value < 0) {\n        setShow(true);\n        if (value < 0) {\n          value = 0;\n        } else if (value > 5) {\n          value = 5;\n        }\n      } else {\n        setShow(false);\n      }\n    }\n    props.handleForm(value, index, id);\n  };\n\n  return (\n    <div className=\"table-trainer\">\n      <p>Entrenador {props.trainer.id}</p>\n      <Form inline>\n        <Form.Label className=\"my-1 mr-2\" htmlFor=\"name\">\n          Nombre\n        </Form.Label>\n        <Form.Control\n          size=\"sm\"\n          className=\"my-1 mr-sm-2\"\n          id=\"name\"\n          placeholder=\"Nombre\"\n          defaultValue={props.trainer.name}\n          onChange={handleInputs}\n        />\n        <Form.Label className=\"my-1 mr-2\" htmlFor=\"valoration\">\n          Valoraci√≥n\n        </Form.Label>\n        <Form.Control\n          size=\"sm\"\n          className=\"my-1 mr-sm-2\"\n          id=\"reputation\"\n          placeholder=\"Valoraci√≥n\"\n          defaultValue={props.trainer.reputation}\n          onChange={handleInputs}\n        />\n        {show ? (\n          <Alert className=\"alert mb-0\" variant=\"danger\">\n            Por favor, escribe n√∫meros del 0 al 5\n          </Alert>\n        ) : (\n          \"\"\n        )}\n        <Form.Label className=\"my-1 mr-2\" htmlFor=\"inlineFormCustomSelectPref\">\n          N√∫mero m√°ximo de clientes\n        </Form.Label>\n        <Form.Control\n          id=\"places\"\n          as=\"select\"\n          size=\"sm\"\n          custom\n          defaultValue={props.trainer.places}\n          onChange={handleInputs}\n        >\n          {optionPlaces}\n        </Form.Control>\n      </Form>\n    </div>\n  );\n}\n\nexport default TrainersForm;\n","import { Link } from \"react-router-dom\";\nimport PrepareModal from \"./PrepareModal\";\nimport TrainersForm from \"./TrainersForm\";\nimport { ListGroup } from \"react-bootstrap\";\n\nfunction ConfigPage(props) {\n  const handleForm = (value, index, id) => {\n    props.handleShownTrainers(value, index, id);\n  };\n  const trainersList = props.shownTrainers.map((trainer, index) => {\n    return (\n      <ListGroup.Item key={trainer.id}>\n        <TrainersForm\n          trainer={trainer}\n          clients={props.clients}\n          index={index}\n          handleForm={handleForm}\n        />\n      </ListGroup.Item>\n    );\n  });\n\n  return (\n    <>\n      <ListGroup variant=\"flush\">{trainersList}</ListGroup>\n      <Link to=\"/results\" className=\"btn-sm btn-primary float-right button\">\n        Calcular Resultados\n      </Link>\n      <PrepareModal clients={props.clients} />\n    </>\n  );\n}\n\nexport default ConfigPage;\n","export default __webpack_public_path__ + \"static/media/foto.9a98e9d2.jpg\";","import { React } from \"react\";\nimport {\n  Card,\n  OverlayTrigger,\n  Tooltip,\n  Button,\n  Row,\n  Col,\n  Image,\n} from \"react-bootstrap\";\nimport image from \"../images/foto.jpg\";\n\nfunction Cards(props) {\n  let asigClients = 0;\n  const listClients = props.clientstrainer.map((trainer, index) => {\n    if (trainer.trainerName === props.trainer.name) {\n      asigClients += 1;\n      return (\n        <span key={index}>\n          - {trainer.clientName} <br />\n        </span>\n      );\n    } else {\n      return null;\n    }\n  });\n\n  return (\n    <Card>\n      <Card.Header>\n        Entrenador {props.index}\n        <OverlayTrigger\n          placement=\"bottom\"\n          overlay={\n            <Tooltip id=\"tooltip-bottom\" className=\"tooltip\">\n              <strong>Valoraci√≥n: {props.trainer.reputation}</strong>\n              <br />\n              <strong>Max clientes: {props.trainer.places}</strong>\n            </Tooltip>\n          }\n        >\n          <Button className=\"float-right btn-circle\" variant=\"dark\">\n            i\n          </Button>\n        </OverlayTrigger>\n      </Card.Header>\n      <Card.Body>\n        <Row>\n          <Col xs={3} md={2}>\n            <Image src={image} width={40} height={40} roundedCircle />\n          </Col>\n          <Col>\n            <Card.Title>{props.trainer.name}</Card.Title>\n            <Card.Text>\n              Clientes asignados: <br />\n              {asigClients === 0 ? \"No se han asignado clientes\" : listClients}\n            </Card.Text>\n          </Col>\n        </Row>\n      </Card.Body>\n      <Card.Footer>{asigClients} clientes asignados</Card.Footer>\n    </Card>\n  );\n}\n\nexport default Cards;\n","import React from \"react\";\nimport Cards from \"./Cards\";\nimport { CardColumns } from \"react-bootstrap\";\n\nfunction ResultView(props) {\n  let clients = JSON.parse(JSON.stringify(props.clients));\n  let trainers = JSON.parse(JSON.stringify(props.trainers));\n  let finalTrainers = [];\n\n  // Ordena los clientes de menor a mayor en funci√≥n de su importancia de reputaci√≥n.\n  clients.sort(function (a, b) {\n    return a.impReputation - b.impReputation;\n  });\n\n  // A cada cliente se le asigna la satisfacci√≥n de si se le asigna cada uno de los entrenadores disponibles.\n  for (let i = 0; i < clients.length; i++) {\n    clients[i].satisfaction = [];\n    for (let index = 0; index < trainers.length; index++) {\n      let satisfaction =\n        10 - (clients[i].impReputation - trainers[index].reputation);\n      if (satisfaction > 10) {\n        satisfaction = 10;\n      }\n      clients[i].satisfaction.push({\n        name: trainers[index].name,\n        places: trainers[index].places,\n        reputation: trainers[index].reputation,\n        satisfaction: satisfaction,\n      });\n    }\n  }\n\n  // Apartado de la asignaci√≥n. Se asignan en orden desde el cliente con menor importancia de la reputaci√≥n al que m√°s importancia le da. \n  for (let i = 0; i < clients.length; i++) {\n    for (let index = 0; index < clients[i].satisfaction.length; index++) {\n      if (\n        clients[i].satisfaction[index].reputation < clients[i].impReputation\n      ) {\n        clients[i].satisfaction[index].selected = true;\n      } else {\n        if (clients[i].satisfaction[index].satisfaction === 10) {\n          clients[i].satisfaction[index].selected = \"ten\";\n        }\n      }\n    }\n  }\n  for (let i = 0; i < clients.length; i++) {\n    for (let index = 0; index < clients[i].satisfaction.length; index++) {\n      if (\n        clients[i].satisfaction[index].selected === true &&\n        trainers[index].places > 0\n      ) {\n        trainers[index].places -= 1;\n        finalTrainers.push({\n          trainerName: trainers[index].name,\n          clientName: clients[i].name,\n          satisfaction: clients[i].satisfaction[index].satisfaction,\n        });\n        break;\n      } else if (\n        clients[i].satisfaction[index].selected === \"ten\" &&\n        trainers[index].places > 0\n      ) {\n        trainers[index].places -= 1;\n        finalTrainers.push({\n          trainerName: trainers[index].name,\n          clientName: clients[i].name,\n          satisfaction: clients[i].satisfaction[index].satisfaction,\n        });\n        break;\n      }\n    }\n  }\n\n  // Se calcula la valoraci√≥n global ya que tenemos los valores de satisfacci√≥n de cada cliente con su entrenador asignado.\n  let globalValoration = 0;\n  for (let i = 0; i < finalTrainers.length; i++) {\n    globalValoration += finalTrainers[i].satisfaction;\n  }\n  props.handleValoration(globalValoration, finalTrainers);\n\n  const finalArr = props.trainersfiltered.map((trainer, index) => {\n    return (\n      <Cards\n        key={index}\n        trainer={trainer}\n        clientstrainer={finalTrainers}\n        index={index + 1}\n      />\n    );\n  });\n\n  return <CardColumns className=\"cards mx-auto\">{finalArr}</CardColumns>;\n}\n\nexport default ResultView;\n","import { React } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\nfunction ValorationList(props) {\n  let number = props.data.satisfaction.toFixed(1);\n  return (\n    <>\n      <Row>\n        <Col>Cliente: {props.data.clientName}</Col>\n        <Col>Entrenador asignado: {props.data.trainerName}</Col>\n        <Col>Satisfacci√≥n cliente: {number}</Col>\n      </Row>\n    </>\n  );\n}\n\nexport default ValorationList;\n","import React from \"react\";\nimport { Container, ProgressBar, ListGroup } from \"react-bootstrap\";\nimport ValorationList from \"./ValorationList\";\n\nfunction Valoration(props) {\n  const valorations = props.listFinalTrainers.map((valoration, index) => {\n    return (\n      <ListGroup.Item key={index}>\n        <ValorationList data={valoration} />\n      </ListGroup.Item>\n    );\n  });\n  let number = props.globalValoration.toFixed(1);\n  return (\n    <Container className=\"valoration\">\n      <h3>Valoraci√≥n global</h3>\n      <h4>{number}</h4>\n      <ProgressBar className=\"progressbar\" now={number} />\n      <p className=\"solutionText\">\n        La valoraci√≥n global corresponde a la media de los valores de\n        satisfacci√≥n de los clientes con sus entrenadores asignados.\n      </p>\n      <p className=\"solutionText\">\n        Para llevar a cabo dicha asignaci√≥n, se ha calculado previamente el\n        valor de la satisfacci√≥n de los clientes con cada uno de los\n        entrenadores, con el fin de obtener la mayor satisfacci√≥n posible. Para\n        obtener el valor de satisfacci√≥n de cada cliente con los diferentes\n        entrenadores, se ha calculado la siguiente operaci√≥n: 10 - (importancia\n        de la reputaci√≥n - reputaci√≥n del entrenador). Obteniendo de esta manera\n        un valor comprendido entre 0 y 10, siendo 0 la menor satisfacci√≥n y 10\n        la mayor (los valores obtenidos por encima de 10 se toman como 10).\n      </p>\n      <p className=\"solutionText\">\n        A continuaci√≥n se muestran el valor de satisfacci√≥n de cada cliente con\n        su entrenador asignado:\n      </p>\n      <ListGroup variant=\"flush\">{valorations}</ListGroup>\n    </Container>\n  );\n}\n\nexport default Valoration;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Tabs, Tab, Row, Col } from \"react-bootstrap\";\nimport dataClients from \"../services/clients.json\";\nimport ResultView from \"./ResultView\";\nimport Valoration from \"./Valoration\";\n\nfunction ResultPage(props) {\n  let sufPlaces = false;\n  const arr = JSON.parse(JSON.stringify(props.trainers));\n  let clients = JSON.parse(JSON.stringify(dataClients));\n  const [globalValoration, setGlovalValoration] = useState(0);\n  const [listFinalTrainers, setListFinalTrainers] = useState([]);\n\n  const handlePlaces = (trainers) => {\n    // Comprueba si hay suficientes plazas para los clientes.\n    let places = 0;\n    for (let i = 0; i < trainers.length; i++) {\n      places += trainers[i].places;\n    }\n    places < clients.length ? (sufPlaces = true) : (sufPlaces = false);\n    // Comprueba si hay m√°s plazas que clientes.\n    let restPlaces = 0;\n    if (places > clients.length) {\n      restPlaces = places - clients.length;\n    }\n\n    // Ordena los entrenadores de menor a mayor reputaci√≥n. Si hay m√°s plazas que clientes, comprueba si hay m√°s en los entrenadores con poca reputaci√≥n, y los resta o elimina a ese entrenador de la asignaci√≥n.\n    trainers.sort(function (a, b) {\n      return a.reputation - b.reputation;\n    });\n\n    if (restPlaces) {\n      for (let i = 0; i < trainers.length; ) {\n        if (trainers[i].places > restPlaces) {\n          trainers[i].places -= restPlaces;\n          break;\n        } else if (trainers[i].places === restPlaces) {\n          trainers.splice(i, 1);\n          break;\n        } else if (trainers[i].places < restPlaces) {\n          restPlaces -= trainers[i].places;\n          trainers.splice(i, 1);\n        }\n        i = 0;\n      }\n    }\n  };\n  // Multiplica por dos la reputaci√≥n para poder compararla con la importancia de los clientes.\n  const handleReputation = (trainers) => {\n    trainers.forEach((trainer) => (trainer.reputation *= 2));\n  };\n\n  handlePlaces(arr);\n  handleReputation(arr);\n\n  // Recibe la media global de satisfacci√≥n as√≠ como la lista con cada cliente, su entrenador asignado y la satisfacci√≥n con √©ste.\n  let numValoration;\n  let finalValTrainers = [];\n  const handleNumValoration = (valoration, trainers) => {\n    numValoration = valoration;\n    finalValTrainers = trainers;\n  };\n  const handleValoration = () => {\n    setGlovalValoration(numValoration);\n    setListFinalTrainers(finalValTrainers);\n  };\n\n  return (\n    <>\n      <Row>\n        {sufPlaces ? (\n          <p className=\"sufplaces\">\n            No hay suficientes plazas para los clientes\n          </p>\n        ) : (\n          <Col>\n            <Tabs\n              className=\"results\"\n              defaultActiveKey=\"results\"\n              id=\"uncontrolled-tab-example\"\n              onSelect={handleValoration}\n            >\n              <Tab eventKey=\"results\" title=\"Entrenadores\">\n                <ResultView\n                  trainers={arr}\n                  clients={clients}\n                  trainersfiltered={props.trainers}\n                  handleValoration={handleNumValoration}\n                />\n              </Tab>\n              <Tab eventKey=\"satisfaction\" title=\"Valoraci√≥n del conjunto\">\n                <Valoration\n                  globalValoration={globalValoration}\n                  listFinalTrainers={listFinalTrainers}\n                />\n              </Tab>\n            </Tabs>\n          </Col>\n        )}\n      </Row>\n      <Link to=\"/\" className=\"btn-sm btn-primary float-right button\">\n        Volver\n      </Link>\n    </>\n  );\n}\n\nexport default ResultPage;\n","import React, { useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"./styles/App.scss\";\nimport { Container } from \"react-bootstrap\";\nimport dataTrainers from \"./services/trainers.json\";\nimport dataClients from \"./services/clients.json\";\nimport ConfigPage from \"./components/ConfigPage\";\nimport ResultPage from \"./components/ResultPage\";\n\nfunction App() {\n  let arrShownTrainers = JSON.parse(JSON.stringify(dataTrainers));\n  let clients = JSON.parse(JSON.stringify(dataClients));\n  const [shownTrainers, setShownTrainers] = useState(arrShownTrainers);\n\n  //se recogen los datos al cambiar los inputs del formulario\n  const handleShownTrainers = (value, index, id) => {\n    if (id === \"name\") {\n      arrShownTrainers[index].name = value;\n    } else if (id === \"reputation\") {\n      if (isNaN(value) || !value) {\n        value = 0;\n      }\n      let number = parseFloat(value);\n      arrShownTrainers[index].reputation = number;\n    } else if (id === \"places\") {\n      let number = parseInt(value);\n      arrShownTrainers[index].places = number;\n    }\n    setShownTrainers(arrShownTrainers);\n  };\n\n  return (\n    <Container fluid>\n      <Switch>\n        <Route exact path=\"/\">\n          <ConfigPage\n            clients={clients}\n            shownTrainers={shownTrainers}\n            handleShownTrainers={handleShownTrainers}\n          />\n        </Route>\n        <Route path=\"/results\">\n          <ResultPage trainers={shownTrainers} />\n        </Route>\n      </Switch>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap.min.js\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}